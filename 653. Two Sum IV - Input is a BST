/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void myfunc(TreeNode* root, vector<int>& ar){
        if(!root) return;
        if(root->left) myfunc(root->left, ar);
        ar.push_back(root->val);
        if(root->right) myfunc(root->right, ar);
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int> ar;
        myfunc(root, ar);
        for(auto it:ar){
            cout << it << " ";
        }
        int i=0;
        int j = ar.size()-1;
        while(i<j){
            if(ar[i]+ar[j] == k) {
                return true;
            }else if(ar[i] + ar[j] > k){
                j--;
            }else {
                i++;
            }
        }
        return false;
    }
};
