/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == NULL) return res;
        queue<TreeNode* > qu;
        qu.push(root);
        bool left_right = true;
        while(!qu.empty()){
            int size = qu.size();
            vector<int> lvl(size);
            for(int i=0;i<size;i++){
                TreeNode* node = qu.front();
                qu.pop();
                int index = (left_right)? i : size-i-1;
                
                lvl[index] = node->val;
                if(node->left!= NULL) qu.push(node->left);
                if(node->right!=NULL) qu.push(node->right);
            }
            left_right = !left_right;
            res.push_back(lvl);
        }
        return res;
    }
};
